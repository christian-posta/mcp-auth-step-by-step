server {
    bind_address = "0.0.0.0"
    bind_port = "8081"
    socket_path = "/tmp/spire-server/private/api.sock"
    trust_domain = "example.org"
    data_dir = "/opt/spire/data/server"
    log_level = "DEBUG"
    ca_ttl = "24h"
    
    # Add JWT issuer for OIDC (using HTTP for local development)
    jwt_issuer = "http://spire-server:8443"
    default_jwt_svid_ttl = "1m" 
    
    # Configure RSA key type (required for OIDC)
    ca_key_type = "rsa-2048"
    
    # Add federation bundle endpoint
    federation {
        bundle_endpoint {
            address = "0.0.0.0"
            port = 8443
        }
    }
}

plugins {
    DataStore "sql" {
        plugin_data {
            database_type = "sqlite3"
            connection_string = "/opt/spire/data/server/datastore.sqlite3"
        }
    }

    NodeAttestor "join_token" {
        plugin_data {
        }
    }

    KeyManager "memory" {
        plugin_data = {}
    }


    UpstreamAuthority "disk" {
        plugin_data {
            key_file_path = "/etc/spire/server/dummy_upstream_ca.key"
            cert_file_path = "/etc/spire/server/dummy_upstream_ca.crt"
        }
    }
        # Software Statements CredentialComposer Plugin
    CredentialComposer "software_statements" {
        plugin_cmd = "/opt/spire/plugins/spire-software-statements"
        plugin_checksum = "0b19c7f1ad1b80d0d7494f9e123cc89b41225f7d39784342b3be3cffb8e07985"
        plugin_data = {
            jwks_url = "http://spire-oidc-discovery:8443/keys"
            client_auth = "client-spiffe-jwt"
            allow_insecure_urls = true  # Enable HTTP for testing
            # Optional: Additional claims
            additional_claims = {
                "scope" = "mcp:read mcp:tools mcp:prompts"
                "organization" = "Solo.io Agent IAM"
                "environment" = "production"
            }
        }
    }
} 